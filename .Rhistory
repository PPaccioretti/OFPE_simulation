),
labels = c(
'DBCA',
'DBCA + Zona',
'DCA',
'DCA + Zona',
'Franjas',
'Franjas + Zona'
)
)
betas_ss$CoeficientesParse <-
factor(
betas_ss$Coeficientes,
levels = c(
"(Intercept)",
"AsigTrat",
"I(AsigTrat^2)",
"as.factor(Zona)26.37",
"as.factor(Zona)22.05",
"AsigTrat:as.factor(Zona)24.6",
"AsigTrat:as.factor(Zona)26.37",
"AsigTrat:as.factor(Zona)22.05"
),
labels = c(
"beta[0]",
"beta[1]%*%N[i]",
"beta[2]%*%N[i]^2",
"beta[3]%*%Z[k]",
"beta[4]%*%Z[k]",
"beta[5]%*%Z[k]%*%N[i]",
"beta[5]%*%Z[k]%*%N[i]",
"beta[5]%*%Z[k]%*%N[i]"
)
)
## Sesgo ----
sesgo_plot <-
sapply(levels(betas_ss$CoeficientesParse), function(x) {
subset <- betas_ss[betas_ss$CoeficientesParse == x, ]
ggplot(subset, aes(x = sesgo)) +
geom_vline(xintercept = 0, col = 'grey8') +
geom_density(aes(colour = ModeloLab, fill = ModeloLab),
alpha = 0.1,
adjust = 3) +
facet_wrap(
CoeficientesParse ~ CorrEsp,
# labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV')),
labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV'),
CoeficientesParse = label_parsed),
# scales = "free_y",
ncol = 1,
dir = 'v'
) +
theme_minimal() +
theme(
legend.position = "bottom",
# text = element_text(size = 30/ggplot2:::.pt),
# legend.justification = c(1, 0),
# legend.position = c(1, 0.4),
# legend.key.size = unit(2/ggplot2:::.pt, 'lines'),
# axis.text.x = element_text(colour = "black"),
# axis.text.y = element_text(colour = "black")
) +
labs(colour = "Diseño",
fill = "Diseño",
x = 'Sesgo',
y = 'Densidad')
}, simplify = FALSE)
sesgo_plot
ggpubr::ggarrange(sesgo_plot[[1]],
sesgo_plot[[2]],
sesgo_plot[[3]],
sesgo_plot[[4]],
sesgo_plot[[5]],
# sesgo_plot[[6]],
common.legend = TRUE,
ncol = 5)
levels(betas_ss$CoeficientesParse)
levels(betas_ss$CoeficientesParse)
x <- levels(betas_ss$CoeficientesParse)[6]
subset <- betas_ss[betas_ss$CoeficientesParse == x, ]
ggplot(subset, aes(x = sesgo)) +
geom_vline(xintercept = 0, col = 'grey8') +
geom_density(aes(colour = ModeloLab, fill = ModeloLab),
alpha = 0.1,
adjust = 3) +
facet_wrap(
CoeficientesParse ~ CorrEsp,
# labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV')),
labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV'),
CoeficientesParse = label_parsed),
# scales = "free_y",
ncol = 1,
dir = 'v'
) +
theme_minimal() +
theme(
legend.position = "bottom",
# text = element_text(size = 30/ggplot2:::.pt),
# legend.justification = c(1, 0),
# legend.position = c(1, 0.4),
# legend.key.size = unit(2/ggplot2:::.pt, 'lines'),
# axis.text.x = element_text(colour = "black"),
# axis.text.y = element_text(colour = "black")
) +
labs(colour = "Diseño",
fill = "Diseño",
x = 'Sesgo',
y = 'Densidad')
subset
0.034 * 26.37
[betas$Coeficientes %in% 'AsigTrat:as.factor(Zona)26.37']
betas$ValoresReales[betas$Coeficientes %in% 'AsigTrat:as.factor(Zona)26.37']
betas$ValoresReales[betas$Coeficientes %in% '(Intercept)'] <- 8
betas$ValoresReales[betas$Coeficientes %in% 'as.factor(Zona)26.37'] <-
26.37
betas$ValoresReales[betas$Coeficientes %in% 'as.factor(Zona)22.05'] <-
22.05
betas$ValoresReales[betas$Coeficientes %in% 'AsigTrat:as.factor(Zona)26.37'] <-
26.37 * 0.034
betas$ValoresReales[betas$Coeficientes %in% 'AsigTrat:as.factor(Zona)22.05'] <-
22.05 * 0.034
betas_ss <-
betas %>%
mutate(sesgo = Value - ValoresReales,
LI = Value + Std.Error * qnorm(0.025),
LS = Value + Std.Error * qnorm(0.975),
cobertura = ValoresReales >= LI & ValoresReales <= LS) %>%
filter(#!is.na(sesgo),
Modelo %in% c(modelos_zona, modelos_sin_zona)
)
betas_ss$ModeloLab =
factor(
betas_ss$Modelo,
levels = c(
'M.DBCA.BlA.Co',
'M.DBCA.Zo.BlA.Co',
'M.DCA.Co',
'M.DCA.Zo.Co',
'M.FR.FrA.Co',
'M.FR.Zo.FrA.Co'
),
labels = c(
'DBCA',
'DBCA + Zona',
'DCA',
'DCA + Zona',
'Franjas',
'Franjas + Zona'
)
)
betas_ss$CoeficientesParse <-
factor(
betas_ss$Coeficientes,
levels = c(
"(Intercept)",
"AsigTrat",
"I(AsigTrat^2)",
"as.factor(Zona)26.37",
"as.factor(Zona)22.05",
"AsigTrat:as.factor(Zona)24.6",
"AsigTrat:as.factor(Zona)26.37",
"AsigTrat:as.factor(Zona)22.05"
),
labels = c(
"beta[0]",
"beta[1]%*%N[i]",
"beta[2]%*%N[i]^2",
"beta[3]%*%Z[k]",
"beta[4]%*%Z[k]",
"beta[5]%*%Z[k]%*%N[i]",
"beta[5]%*%Z[k]%*%N[i]",
"beta[5]%*%Z[k]%*%N[i]"
)
)
## Sesgo ----
sesgo_plot <-
sapply(levels(betas_ss$CoeficientesParse), function(x) {
# x <- levels(betas_ss$CoeficientesParse)[6]
subset <- betas_ss[betas_ss$CoeficientesParse == x, ]
ggplot(subset, aes(x = sesgo)) +
geom_vline(xintercept = 0, col = 'grey8') +
geom_density(aes(colour = ModeloLab, fill = ModeloLab),
alpha = 0.1,
adjust = 3) +
facet_wrap(
CoeficientesParse ~ CorrEsp,
# labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV')),
labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV'),
CoeficientesParse = label_parsed),
# scales = "free_y",
ncol = 1,
dir = 'v'
) +
theme_minimal() +
theme(
legend.position = "bottom",
# text = element_text(size = 30/ggplot2:::.pt),
# legend.justification = c(1, 0),
# legend.position = c(1, 0.4),
# legend.key.size = unit(2/ggplot2:::.pt, 'lines'),
# axis.text.x = element_text(colour = "black"),
# axis.text.y = element_text(colour = "black")
) +
labs(colour = "Diseño",
fill = "Diseño",
x = 'Sesgo',
y = 'Densidad')
}, simplify = FALSE)
sesgo_plot[[6]]
ggpubr::ggarrange(sesgo_plot[[1]],
sesgo_plot[[2]],
sesgo_plot[[3]],
sesgo_plot[[4]],
sesgo_plot[[5]],
sesgo_plot[[6]],
common.legend = TRUE,
ncol = 5)
ggpubr::ggarrange(sesgo_plot[[1]],
sesgo_plot[[2]],
sesgo_plot[[3]],
sesgo_plot[[4]],
sesgo_plot[[5]],
sesgo_plot[[6]],
common.legend = TRUE,
ncol = 5)
ggplot_vacio <- ggplot() + theme_void()
ggpubr::ggarrange(ggplot_vacio,
ggplot_vacio,
sesgo_plot[[4]],
sesgo_plot[[5]],
ncol = 2,
nrow = 2)
paramZonaInter <- ggpubr::ggarrange(
ggplot_vacio,
ggplot_vacio,
sesgo_plot[[4]],
sesgo_plot[[5]],
sesgo_plot[[6]],
ncol = 3,
nrow = 2
)
paramZonaInter
paramZonaInter <- ggpubr::ggarrange(
ggplot_vacio,
ggplot_vacio,
ggplot_vacio,
sesgo_plot[[4]],
sesgo_plot[[5]],
sesgo_plot[[6]],
ncol = 3,
nrow = 2
)
paramZonaInter
betas_ss$CoeficientesParse <-
factor(
betas_ss$Coeficientes,
levels = c(
"(Intercept)",
"AsigTrat",
"I(AsigTrat^2)",
"as.factor(Zona)26.37",
"as.factor(Zona)22.05",
"AsigTrat:as.factor(Zona)24.6",
"AsigTrat:as.factor(Zona)26.37",
"AsigTrat:as.factor(Zona)22.05"
),
labels = c(
"beta[0]",
"beta[1]%*%N[i]",
"beta[2]%*%N[i]^2",
"beta[3]%*%Z[k]",
"beta[3]%*%Z[k]",
"beta[4]%*%Z[k]%*%N[i]",
"beta[4]%*%Z[k]%*%N[i]",
"beta[4]%*%Z[k]%*%N[i]"
)
)
## Sesgo ----
sesgo_plot <-
sapply(levels(betas_ss$CoeficientesParse), function(x) {
# x <- levels(betas_ss$CoeficientesParse)[6]
subset <- betas_ss[betas_ss$CoeficientesParse == x, ]
ggplot(subset, aes(x = sesgo)) +
geom_vline(xintercept = 0, col = 'grey8') +
geom_density(aes(colour = ModeloLab, fill = ModeloLab),
alpha = 0.1,
adjust = 3) +
facet_wrap(
CoeficientesParse ~ CorrEsp,
# labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV')),
labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV'),
CoeficientesParse = label_parsed),
# scales = "free_y",
ncol = 1,
dir = 'v'
) +
theme_minimal() +
theme(
legend.position = "bottom",
# text = element_text(size = 30/ggplot2:::.pt),
# legend.justification = c(1, 0),
# legend.position = c(1, 0.4),
# legend.key.size = unit(2/ggplot2:::.pt, 'lines'),
# axis.text.x = element_text(colour = "black"),
# axis.text.y = element_text(colour = "black")
) +
labs(colour = "Diseño",
fill = "Diseño",
x = 'Sesgo',
y = 'Densidad')
}, simplify = FALSE)
ggplot_vacio <- ggplot() + theme_void()
paramZonaInter <- ggpubr::ggarrange(
ggplot_vacio,
ggplot_vacio,
ggplot_vacio,
sesgo_plot[[4]],
sesgo_plot[[5]],
sesgo_plot[[6]],
ncol = 3,
nrow = 2
)
paramZonaInter <- ggpubr::ggarrange(
paramZonaInter
paramZonaInter
betas_ss <-
betas %>%
mutate(sesgo = Value - ValoresReales,
LI = Value + Std.Error * qnorm(0.025),
LS = Value + Std.Error * qnorm(0.975),
cobertura = ValoresReales >= LI & ValoresReales <= LS) %>%
filter(#!is.na(sesgo),
Modelo %in% c(modelos_zona, modelos_sin_zona)
)
betas_ss$ModeloLab =
factor(
betas_ss$Modelo,
levels = c(
'M.DBCA.BlA.Co',
'M.DBCA.Zo.BlA.Co',
'M.DCA.Co',
'M.DCA.Zo.Co',
'M.FR.FrA.Co',
'M.FR.Zo.FrA.Co'
),
labels = c(
'DBCA',
'DBCA + Zona',
'DCA',
'DCA + Zona',
'Franjas',
'Franjas + Zona'
)
)
betas_ss$CoeficientesParse <-
factor(
betas_ss$Coeficientes,
levels = c(
"(Intercept)",
"AsigTrat",
"I(AsigTrat^2)",
"as.factor(Zona)26.37",
"as.factor(Zona)22.05",
"AsigTrat:as.factor(Zona)24.6",
"AsigTrat:as.factor(Zona)26.37",
"AsigTrat:as.factor(Zona)22.05"
),
labels = c(
"beta[0]",
"beta[1]%*%N[i]",
"beta[2]%*%N[i]^2",
"beta[3]%*%Z[k]",
"beta[3]%*%Z[k]",
"beta[4]%*%Z[k]%*%N[i]",
"beta[4]%*%Z[k]%*%N[i]",
"beta[4]%*%Z[k]%*%N[i]"
)
)
## Sesgo ----
sesgo_plot <-
sapply(levels(betas_ss$CoeficientesParse), function(x) {
# x <- levels(betas_ss$CoeficientesParse)[6]
subset <- betas_ss[betas_ss$CoeficientesParse == x, ]
ggplot(subset, aes(x = sesgo)) +
geom_vline(xintercept = 0, col = 'grey8') +
geom_density(aes(colour = ModeloLab, fill = ModeloLab),
alpha = 0.1,
adjust = 3) +
facet_wrap(
CoeficientesParse ~ CorrEsp,
# labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV')),
labeller = labeller(CorrEsp = c(baja = 'Alto RSV', media = 'Medio RSV'),
CoeficientesParse = label_parsed),
# scales = "free_y",
ncol = 1,
dir = 'v'
) +
theme_minimal() +
theme(
legend.position = "bottom",
# text = element_text(size = 30/ggplot2:::.pt),
# legend.justification = c(1, 0),
# legend.position = c(1, 0.4),
# legend.key.size = unit(2/ggplot2:::.pt, 'lines'),
# axis.text.x = element_text(colour = "black"),
# axis.text.y = element_text(colour = "black")
) +
labs(colour = "Diseño",
fill = "Diseño",
x = 'Sesgo',
y = 'Densidad')
}, simplify = FALSE)
ggplot_vacio <- ggplot() + theme_void()
paramZonaInter <- ggpubr::ggarrange(
ggplot_vacio,
ggplot_vacio,
ggplot_vacio,
sesgo_plot[[4]],
sesgo_plot[[5]],
sesgo_plot[[6]],
ncol = 3,
nrow = 2
)
paramZonaInter <- ggpubr::ggarrange(
ggplot_vacio,
ggplot_vacio,
sesgo_plot[[4]],
sesgo_plot[[5]],
ncol = 3,
nrow = 2
)
paramZonaInter
paramZonaInter <- ggpubr::ggarrange(
ggplot_vacio,
ggplot_vacio,
sesgo_plot[[4]],
sesgo_plot[[5]],
ncol = 2,
nrow = 2
)
paramZonaInter
ggpubr::ggarrange(sesgo_plot[[1]],
sesgo_plot[[2]],
sesgo_plot[[3]],
sesgo_plot[[4]],
sesgo_plot[[5]],
sesgo_plot[[6]],
common.legend = TRUE,
ncol = 5)
ggpubr::ggarrange(sesgo_plot[[1]],
sesgo_plot[[2]],
sesgo_plot[[3]],
# sesgo_plot[[4]],
# sesgo_plot[[5]],
paramZonaInter,
common.legend = TRUE,
ncol = 5)
ggpubr::ggarrange(sesgo_plot[[1]],
sesgo_plot[[2]],
sesgo_plot[[3]],
sesgo_plot[[4]],
sesgo_plot[[5]],
# paramZonaInter,
common.legend = TRUE,
ncol = 5)
# Paquetes ----
library(dplyr)
library(ggplot2)
# Funciones ----
source('src/ggplot_ecdf.R', encoding = "UTF-8")
no_null_or_error <- function(x) {
!(is.null(x) | inherits(x, 'try-error'))
}
selecciona <- function(datos, nombre) {
misListas <- lapply(datos, function(y) {
try(y[[nombre]], silent = TRUE)
})
do.call(rbind, misListas)
}
# Lectura datos ----
# patronResultados <- '_2020_(10)_12_*'
patronResultados <- '_2020_(15)_12_*'
misRDS <-
list.files('resultados/', pattern = patronResultados, full.names = TRUE)
misObjetos  <- lapply(misRDS, function(x) {
miRDS <- tryCatch(readRDS(x), error = function(e) {return(NULL)})
if (is.null(miRDS))
return(NULL)
miRDS <- miRDS[unlist(lapply(miRDS, no_null_or_error))]
resumen <- selecciona(miRDS, 'Resumen')
betas <- selecciona(miRDS, 'BetasEstReal')
semillas <- selecciona(miRDS, 'semillas')
list(Resumen = resumen,
BetasEstReal = betas,
semillas = semillas,
Simulaciones = length(miRDS))
})
resumen <- selecciona(misObjetos, 'Resumen')
betas <- selecciona(misObjetos, 'BetasEstReal')
semillas <- selecciona(misObjetos, 'semillas')
# Cantidad de simulaciones total
sum(selecciona(misObjetos, 'Simulaciones'))
misModelosConCorr <- grepl('[.]Co$', resumen$Modelo)
resumen$ConCorr <- misModelosConCorr
resumen$Disenio[grepl('M[.]DBCA[.]*', resumen$Modelo)] <- 'DBCA'
resumen$Disenio[grepl('M[.]DCA[.]*', resumen$Modelo)] <- 'DCA'
resumen$Disenio[grepl('M[.]FR[.]*', resumen$Modelo)] <- 'Franjas'
# Error estandar residual ----
## Sin contemplar efecto zona ----
modelos_sin_zona <-
c("M.DBCA.BlA.Co", "M.DCA.Co", "M.FR.FrA.Co")
2
